from _typeshed import Incomplete
from engineio.static_files import get_static_file as get_static_file

class ASGIApp:
    engineio_server: Incomplete
    other_asgi_app: Incomplete
    engineio_path: Incomplete
    static_files: Incomplete
    on_startup: Incomplete
    on_shutdown: Incomplete
    def __init__(self, engineio_server, other_asgi_app: Incomplete | None = None, static_files: Incomplete | None = None, engineio_path: str = 'engine.io', on_startup: Incomplete | None = None, on_shutdown: Incomplete | None = None) -> None: ...
    async def __call__(self, scope, receive, send) -> None: ...
    async def serve_static_file(self, static_file, receive, send) -> None: ...
    async def lifespan(self, scope, receive, send) -> None: ...
    async def not_found(self, receive, send) -> None: ...

async def translate_request(scope, receive, send): ...
async def make_response(status, headers, payload, environ) -> None: ...

class WebSocket:
    handler: Incomplete
    asgi_receive: Incomplete
    asgi_send: Incomplete
    def __init__(self, handler, server) -> None: ...
    async def __call__(self, environ): ...
    async def close(self) -> None: ...
    async def send(self, message) -> None: ...
    async def wait(self): ...
